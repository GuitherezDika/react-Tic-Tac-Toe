{"ast":null,"code":"import _slicedToArray from \"/home/mahardika/Documents/professional/tryJS/satu-try/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mahardika/Documents/professional/tryJS/satu-try/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Player from './components/ChoosePlayer';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: Array(9).fill(null),\n      player: \"X\",\n      winner: null\n    };\n  }\n\n  checkWinner() {\n    let winLines = [['0', '1', '2'], ['3', '4', '5'], ['6', '7', '8'], ['0', '3', '6'], ['1', '4', '7'], ['2', '5', '8'], ['0', '4', '8'], ['2', '4', '6']];\n\n    for (let index = 0; index < winLines.length; index++) {\n      const _winLines$index = _slicedToArray(winLines[index], 3),\n            a = _winLines$index[0],\n            b = _winLines$index[1],\n            c = _winLines$index[2];\n\n      if (this.state.board[a] && this.state.board[a] === this.state.board[b] && this.state.board[a] === this.state.board[c]) {\n        alert('You Won!');\n        this.setState({\n          winner: this.state.player\n        });\n      }\n    }\n  }\n\n  handleClick(index) {\n    let newBoard = this.state.board;\n\n    if (this.state.board[index] === null && !this.state.winner) {\n      newBoard[index] = this.state.player;\n      this.setState({\n        board: newBoard,\n        player: this.state.player === \"X\" ? \"O\" : \"X\"\n      });\n    }\n\n    this.checkWinner();\n  }\n\n  setPlayer(player) {\n    console.log(object);\n  }\n\n  render() {\n    const BoxValue = this.state.board.map((boxjumlah, index) => React.createElement(\"div\", {\n      className: \"box\",\n      key: index,\n      onClick: () => this.handleClick(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, boxjumlah));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Tic-tac-toe\"), React.createElement(Player, {\n      player: e => this.setPlayer(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", BoxValue));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/home/mahardika/Documents/professional/tryJS/satu-try/src/App.js"],"names":["React","Component","Player","App","constructor","props","state","board","Array","fill","player","winner","checkWinner","winLines","index","length","a","b","c","alert","setState","handleClick","newBoard","setPlayer","console","log","object","render","BoxValue","map","boxjumlah","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Player from './components/ChoosePlayer';\n\nexport class App extends Component {\n   constructor(props) {\n      super(props)\n      this.state = {\n         board: Array(9).fill(null),\n         player: \"X\",\n         winner: null\n      }\n   }\n\n   checkWinner(){\n      let winLines = \n      [\n         ['0','1','2'],\n         ['3','4','5'],\n         ['6','7','8'],\n         ['0','3','6'],\n         ['1','4','7'],\n         ['2','5','8'],\n         ['0','4','8'],\n         ['2','4','6'],\n      ];\n\n      for (let index=0; index<winLines.length; index++) {\n         const [a,b,c] = winLines[index];\n         if(this.state.board[a] && this.state.board[a] === this.state.board[b] && this.state.board[a] === this.state.board[c]){\n            alert('You Won!');\n            this.setState({\n               winner: this.state.player\n            })\n         }\n      }\n   }\n   \n   handleClick(index){\n      let newBoard = this.state.board;\n      if(this.state.board[index] === null && !this.state.winner){\n         newBoard[index] = this.state.player\n         this.setState({\n            board: newBoard,\n            player: this.state.player === \"X\"? \"O\" : \"X\"\n         })\n      }\n      this.checkWinner();\n   }\n\n   setPlayer(player){\n      console.log(object)\n   }\n\n   render() {\n      const BoxValue = this.state.board.map\n      (\n         (boxjumlah, index) => \n         <div className='box' \n         key={index} \n         onClick=\n         {\n            () => this.handleClick(index)\n         }>{boxjumlah}\n         </div>\n      )\n      return (\n         <div className='container'>\n            <h1> Tic-tac-toe</h1>\n            <Player player = {(e) => this.setPlayer(e)}/>\n            <div className='board'> {BoxValue}\n\n            </div>\n\n         </div>\n      )\n   }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}